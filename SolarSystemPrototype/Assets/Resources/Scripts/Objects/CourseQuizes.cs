// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using CourseQuizesNamespace;
//
//    var courseQuizes = CourseQuizes.FromJson(jsonString);

namespace CourseQuizesNamespace
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class CourseQuizes
    {
        [JsonProperty("id")]
        public long Id { get; set; }

        [JsonProperty("title")]
        public string Title { get; set; }

        [JsonProperty("html_url")]
        public Uri HtmlUrl { get; set; }

        [JsonProperty("mobile_url")]
        public Uri MobileUrl { get; set; }

        [JsonProperty("description")]
        public string Description { get; set; }

        [JsonProperty("quiz_type")]
        public string QuizType { get; set; }

        [JsonProperty("time_limit")]
        public object TimeLimit { get; set; }

        [JsonProperty("shuffle_answers")]
        public bool ShuffleAnswers { get; set; }

        [JsonProperty("show_correct_answers")]
        public bool ShowCorrectAnswers { get; set; }

        [JsonProperty("scoring_policy")]
        public string ScoringPolicy { get; set; }

        [JsonProperty("allowed_attempts")]
        public long AllowedAttempts { get; set; }

        [JsonProperty("one_question_at_a_time")]
        public bool OneQuestionAtATime { get; set; }

        [JsonProperty("question_count")]
        public long QuestionCount { get; set; }

        [JsonProperty("points_possible")]
        public long PointsPossible { get; set; }

        [JsonProperty("cant_go_back")]
        public bool CantGoBack { get; set; }

        [JsonProperty("ip_filter")]
        public object IpFilter { get; set; }

        [JsonProperty("due_at")]
        public object DueAt { get; set; }

        [JsonProperty("lock_at")]
        public object LockAt { get; set; }

        [JsonProperty("unlock_at")]
        public object UnlockAt { get; set; }

        [JsonProperty("published")]
        public bool Published { get; set; }

        [JsonProperty("locked_for_user")]
        public bool LockedForUser { get; set; }

        [JsonProperty("hide_results")]
        public object HideResults { get; set; }

        [JsonProperty("show_correct_answers_at")]
        public object ShowCorrectAnswersAt { get; set; }

        [JsonProperty("hide_correct_answers_at")]
        public object HideCorrectAnswersAt { get; set; }

        [JsonProperty("all_dates")]
        public AllDate[] AllDates { get; set; }

        [JsonProperty("can_update")]
        public bool CanUpdate { get; set; }

        [JsonProperty("require_lockdown_browser")]
        public bool RequireLockdownBrowser { get; set; }

        [JsonProperty("require_lockdown_browser_for_results")]
        public bool RequireLockdownBrowserForResults { get; set; }

        [JsonProperty("require_lockdown_browser_monitor")]
        public bool RequireLockdownBrowserMonitor { get; set; }

        [JsonProperty("lockdown_browser_monitor_data")]
        public object LockdownBrowserMonitorData { get; set; }

        [JsonProperty("permissions")]
        public Permissions Permissions { get; set; }

        [JsonProperty("quiz_reports_url")]
        public Uri QuizReportsUrl { get; set; }

        [JsonProperty("quiz_statistics_url")]
        public Uri QuizStatisticsUrl { get; set; }

        [JsonProperty("quiz_submission_versions_html_url")]
        public Uri QuizSubmissionVersionsHtmlUrl { get; set; }

        [JsonProperty("assignment_id")]
        public object AssignmentId { get; set; }

        [JsonProperty("one_time_results")]
        public bool OneTimeResults { get; set; }

        [JsonProperty("assignment_group_id")]
        public long AssignmentGroupId { get; set; }

        [JsonProperty("show_correct_answers_last_attempt")]
        public bool ShowCorrectAnswersLastAttempt { get; set; }

        [JsonProperty("version_number")]
        public long VersionNumber { get; set; }

        [JsonProperty("has_access_code")]
        public bool HasAccessCode { get; set; }

        [JsonProperty("post_to_sis")]
        public object PostToSis { get; set; }

        [JsonProperty("migration_id")]
        public object MigrationId { get; set; }
    }

    public partial class AllDate
    {
        [JsonProperty("id")]
        public long Id { get; set; }

        [JsonProperty("due_at")]
        public object DueAt { get; set; }

        [JsonProperty("unlock_at")]
        public object UnlockAt { get; set; }

        [JsonProperty("lock_at")]
        public object LockAt { get; set; }

        [JsonProperty("title")]
        public string Title { get; set; }
    }

    public partial class Permissions
    {
        [JsonProperty("read_statistics")]
        public bool ReadStatistics { get; set; }

        [JsonProperty("manage")]
        public bool Manage { get; set; }

        [JsonProperty("read")]
        public bool Read { get; set; }

        [JsonProperty("update")]
        public bool Update { get; set; }

        [JsonProperty("create")]
        public bool Create { get; set; }

        [JsonProperty("submit")]
        public bool Submit { get; set; }

        [JsonProperty("preview")]
        public bool Preview { get; set; }

        [JsonProperty("delete")]
        public bool Delete { get; set; }

        [JsonProperty("grade")]
        public bool Grade { get; set; }

        [JsonProperty("review_grades")]
        public bool ReviewGrades { get; set; }

        [JsonProperty("view_answer_audits")]
        public bool ViewAnswerAudits { get; set; }
    }

    public partial class CourseQuizes
    {
        public static CourseQuizes[] FromJson(string json) => JsonConvert.DeserializeObject<CourseQuizes[]>(json, CourseQuizesNamespace.Converter.Settings);
    }

    public static class Serialize
    {
        public static string ToJson(this CourseQuizes[] self) => JsonConvert.SerializeObject(self, CourseQuizesNamespace.Converter.Settings);
    }

    internal static class Converter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}

